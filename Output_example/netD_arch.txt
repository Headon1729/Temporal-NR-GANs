D
Discriminator(
  (block1): OptimizedResidualBlock(
    (conv1): CustomConv2d(
      (conv): Conv2d(3, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    )
    (conv2): ConvMeanPool(
      (conv): CustomConv2d(
        (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (conv_shortcut): MeanPoolConv(
      (conv): CustomConv2d(
        (conv): Conv2d(3, 128, kernel_size=(1, 1), stride=(1, 1))
      )
    )
    (relu2): ReLU()
  )
  (block2): ResidualBlock(
    (relu1): ReLU()
    (relu2): ReLU()
    (conv_shortcut): ConvMeanPool(
      (conv): CustomConv2d(
        (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
      )
    )
    (conv1): CustomConv2d(
      (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    )
    (conv2): ConvMeanPool(
      (conv): CustomConv2d(
        (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
  )
  (block3): ResidualBlock(
    (relu1): ReLU()
    (relu2): ReLU()
    (conv1): CustomConv2d(
      (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    )
    (conv2): CustomConv2d(
      (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    )
  )
  (block4): ResidualBlock(
    (relu1): ReLU()
    (relu2): ReLU()
    (conv1): CustomConv2d(
      (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    )
    (conv2): CustomConv2d(
      (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    )
  )
  (relu5): ReLU()
  (linear5): Linear(in_features=128, out_features=1, bias=True)
)
The number of parameters: 1053825
